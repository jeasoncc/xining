{"ast":null,"code":"import _classCallCheck from \"/Users/chendengfei/Documents/workspace/xining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chendengfei/Documents/workspace/xining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chendengfei/Documents/workspace/xining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chendengfei/Documents/workspace/xining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chendengfei/Documents/workspace/xining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _class,\n    _class2,\n    _temp,\n    _jsxFileName = \"/Users/chendengfei/Documents/workspace/xining/src/components/Dialog/Modal.jsx\";\n\nimport React from \"react\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Modal, Row, Col } from \"reactstrap\";\nimport appState from \"store/showDialog\";\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nconsole.log(appState.timer);\n\nvar Modals = observer(_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Modals, _React$Component);\n\n  function Modals() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modals);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modals)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      exampleModal: true\n    };\n\n    _this.toggleModal = function (state) {\n      _this.props.someTest.resetTimer();\n\n      console.log(_this.props.someTest.timer); // this.setState({\n      //   [state]: !this.state[state]\n      // });\n    };\n\n    return _this;\n  }\n\n  _createClass(Modals, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Modal, {\n        className: this.props.someTest.info ? \"modal-dialog-centered modal-success\" : \"modal-dialog-centered modal-danger\",\n        contentClassName: this.props.someTest.info ? \"bg-gradient-success\" : \"bg-gradient-danger\",\n        isOpen: this.props.someTest.timer,\n        toggle: function toggle() {\n          return _this2.toggleModal(\"exampleModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"modal-title\",\n        id: \"exampleModalLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Modal title\"), React.createElement(\"button\", {\n        \"aria-label\": \"Close\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.toggleModal(\"exampleModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.com), React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: this.props.someTest.info ? \"success\" : \"danger\",\n        \"data-dismiss\": \"modal\",\n        type: \"button\",\n        onClick: function onClick() {\n          _this2.props.someTest.info ? function () {\n            _this2.toggleModal(\"exampleModal\");\n\n            _this2.context.router.history.push(\"/auth/login\");\n          }() : _this2.toggleModal(\"exampleModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"\\u5173\\u95ED\"))));\n    }\n  }]);\n\n  return Modals;\n}(React.Component), _class2.contextTypes = {\n  router: PropTypes.object\n}, _temp)) || _class;\n\nexport default Modals;","map":{"version":3,"sources":["/Users/chendengfei/Documents/workspace/xining/src/components/Dialog/Modal.jsx"],"names":["React","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Modal","Row","Col","appState","observer","PropTypes","console","log","timer","Modals","state","exampleModal","toggleModal","props","someTest","resetTimer","info","com","context","router","history","push","Component","contextTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Modal,\n  Row,\n  Col\n} from \"reactstrap\";\nimport appState from \"store/showDialog\"\nimport {observer} from 'mobx-react';\nimport PropTypes from 'prop-types';\nconsole.log(appState.timer)\n@observer\nclass Modals extends React.Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n  state = {\n    exampleModal: true\n  };\n  toggleModal = state => {\n    this.props.someTest.resetTimer();\n    console.log(this.props.someTest.timer)\n\n    // this.setState({\n    //   [state]: !this.state[state]\n    // });\n  };\n  render() {\n    return (\n      <>\n        {/* Button trigger modal */}\n        {/* <Button\n          color=\"primary\"\n          type=\"button\"\n          onClick={() => this.toggleModal(\"exampleModal\")}\n        >\n          Launch demo modal\n        </Button> */}\n        {/* Modal */}\n        <Modal\n          className={this.props.someTest.info?\"modal-dialog-centered modal-success\": \"modal-dialog-centered modal-danger\"}\n          contentClassName={this.props.someTest.info?\"bg-gradient-success\":\"bg-gradient-danger\"}\n\n          isOpen={this.props.someTest.timer}\n          toggle={() => this.toggleModal(\"exampleModal\")}\n        >\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              Modal title\n            </h5>\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={() => this.toggleModal(\"exampleModal\")}\n            >\n              <span aria-hidden={true}>Ã—</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            {this.props.com}\n          </div>\n          <div className=\"modal-footer\">\n            <Button\n              color={this.props.someTest.info?\"success\":\"danger\"}\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={() => {\n                this.props.someTest.info?(() => {\n                  this.toggleModal(\"exampleModal\")\n                  this.context.router.history.push(\"/auth/login\")\n                })():this.toggleModal(\"exampleModal\")\n              }}\n            >\n              å…³é—­\n            </Button>\n            {/* <Button color=\"primary\" type=\"button\">\n              Save changes\n            </Button> */}\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default Modals;"]},"metadata":{},"sourceType":"module"}
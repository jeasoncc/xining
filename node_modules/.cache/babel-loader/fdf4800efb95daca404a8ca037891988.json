{"ast":null,"code":"import axios from \"axios\"; // import qs from \"qs\";\n\nimport { getKey, setKey } from \"bin/cookie/base\"; // axios.defaults.timeout = 5000; //响应时间\n// axios.defaults.headers.post[\"Content-Type\"] =\n//   \"application/x-www-form-urlencoded\"; //配置请求头\n// axios.defaults.baseURL = \"http://localhost:8080/ArmyCreate/\"; //配置接口地址\n// axios.defaults.baseImgURL = \"http://localhost:8080\";\n\naxios.defaults.baseURL = \"http://localhost:8585\"; //配置接口地址\n// axios.defaults.baseImgURL = \"http://182.254.165.115:8080\";\n\nvar service = axios.create({\n  baseURL: axios.defaults.baseURL,\n  timeout: 60000\n});\n/**\n *  @description 添加请求拦截器\n */\n\nservice.interceptors.request.use(function (config) {\n  config.headers = {};\n  /**\n   *  @description 在发送请求之前做某件事\n   */\n\n  if (getKey()) {\n    config.headers[\"authorization\"] = getKey(); // 让每个请求携带自定义token 请根据实际情况自行修改\n\n    console.log(\"jinlaile\");\n  } else {// console.log(\"sasa\")\n  }\n\n  if (config.method === \"post\") {\n    // config.data = qs.stringify(config.data);\n    config.headers[\"Content-Type\"] = \"application/json\";\n  }\n\n  return config;\n}, function (error) {\n  Promise.reject(error);\n}); // respone拦截器\n\nservice.interceptors.response.use(function (response) {\n  console.log(response);\n\n  if (response.headers.authorization) {\n    console.log(\"sasa\");\n    setKey(response.headers.authorization);\n  }\n\n  return response.data;\n}, function (error) {\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"sources":["/Users/chendengfei/Documents/workspace/xining/src/bin/axios/http.js"],"names":["axios","getKey","setKey","defaults","baseURL","service","create","timeout","interceptors","request","use","config","headers","console","log","method","error","Promise","reject","response","authorization","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,iBAA/B,C,CAEA;AACA;AACA;AACA;AACA;;AACAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,uBAAzB,C,CAAkD;AAClD;;AAEA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC3BF,EAAAA,OAAO,EAAEJ,KAAK,CAACG,QAAN,CAAeC,OADG;AAE3BG,EAAAA,OAAO,EAAE;AAFkB,CAAb,CAAhB;AAIA;;;;AAGAF,OAAO,CAACG,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACRA,EAAAA,MAAM,CAACC,OAAP,GAAiB,EAAjB;AACA;;;;AAGA,MAAIX,MAAM,EAAV,EAAc;AACZU,IAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkCX,MAAM,EAAxC,CADY,CACgC;;AAC5CY,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAHD,MAGO,CACL;AACD;;AACD,MAAIH,MAAM,CAACI,MAAP,KAAkB,MAAtB,EAA8B;AAC5B;AACAJ,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,kBAAjC;AAED;;AACD,SAAOD,MAAP;AACD,CAlBH,EAmBE,UAAAK,KAAK,EAAI;AACPC,EAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf;AACD,CArBH,E,CAuBA;;AACAX,OAAO,CAACG,YAAR,CAAqBW,QAArB,CAA8BT,GAA9B,CACE,UAAAS,QAAQ,EAAI;AACVN,EAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;;AACA,MAAIA,QAAQ,CAACP,OAAT,CAAiBQ,aAArB,EAAoC;AAClCP,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAZ,IAAAA,MAAM,CAACiB,QAAQ,CAACP,OAAT,CAAiBQ,aAAlB,CAAN;AACD;;AACD,SAAOD,QAAQ,CAACE,IAAhB;AACD,CARH,EASE,UAAAL,KAAK,EAAI;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAXH;AAcA,eAAeX,OAAf","sourcesContent":["import axios from \"axios\";\n// import qs from \"qs\";\nimport { getKey, setKey } from \"bin/cookie/base\";\n\n// axios.defaults.timeout = 5000; //响应时间\n// axios.defaults.headers.post[\"Content-Type\"] =\n//   \"application/x-www-form-urlencoded\"; //配置请求头\n// axios.defaults.baseURL = \"http://localhost:8080/ArmyCreate/\"; //配置接口地址\n// axios.defaults.baseImgURL = \"http://localhost:8080\";\naxios.defaults.baseURL = \"http://localhost:8585\"; //配置接口地址\n// axios.defaults.baseImgURL = \"http://182.254.165.115:8080\";\n\nconst service = axios.create({\n  baseURL: axios.defaults.baseURL,\n  timeout: 60000\n});\n/**\n *  @description 添加请求拦截器\n */\nservice.interceptors.request.use(\n  config => {\n    config.headers = {};\n    /**\n     *  @description 在发送请求之前做某件事\n     */\n    if (getKey()) {\n      config.headers[\"authorization\"] = getKey(); // 让每个请求携带自定义token 请根据实际情况自行修改\n      console.log(\"jinlaile\")\n    } else {\n      // console.log(\"sasa\")\n    }\n    if (config.method === \"post\") {\n      // config.data = qs.stringify(config.data);\n      config.headers[\"Content-Type\"] = \"application/json\";\n\n    }\n    return config;\n  },\n  error => {\n    Promise.reject(error);\n  }\n);\n// respone拦截器\nservice.interceptors.response.use(\n  response => {\n    console.log(response)\n    if (response.headers.authorization) {\n      console.log(\"sasa\")\n      setKey(response.headers.authorization);\n    }\n    return response.data;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nexport default service;\n"]},"metadata":{},"sourceType":"module"}